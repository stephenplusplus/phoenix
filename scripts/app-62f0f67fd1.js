!function(){"use strict";angular.module("gcloudConsole",["ngAnimate","ngSanitize","ui.router","ngMaterial","md.data.table","angular-google-gapi","oc.lazyLoad","firebase"])}(),function(){"use strict";function t(){return{restrict:"A",priority:1,link:e}}function e(t,e){var n=e[0];setTimeout(angular.bind(n,n.select),500)}angular.module("gcloudConsole").directive("textSelected",t)}(),function(){"use strict";function t(){return System.config({paths:{"github:*":"https://github.jspm.io/*","npm:*":"https://npm.jspm.io/*"}}),System}angular.module("gcloudConsole").factory("System",t)}(),function(){"use strict";function t(t,e,n){var o=t.fetch,a=/\.html/,r=/^.*[\\\/]/;return t.fetch=function(t){return a.test(t.address)?e.get(t.address).then(function(e){var o=t.address.replace(r,"");return n.put(o,e.data),""}):o.apply(this,arguments)},t}angular.module("gcloudConsole").decorator("System",t),t.$inject=["$delegate","$http","$templateCache"]}(),function(){"use strict";function t(t,e){var n=t.fetch,o=/\.css/;return t.fetch=function(t){if(!o.test(t.address))return n.apply(this,arguments);var a=e.defer(),r=document.createElement("link");return r.rel="stylesheet",r.onload=function(){a.resolve("")},r.onerror=function(t){a.reject(t)},document.head.appendChild(r),r.href=t.address,a.promise},t}angular.module("gcloudConsole").decorator("System",t),t.$inject=["$delegate","$q"]}(),function(){"use strict";function t(){return{restrict:"E",replace:!0,templateUrl:"app/components/sidenav/sidenav.html",transclude:!0,controller:e,controllerAs:"sidenav"}}function e(t,e,n,o,a){function r(){e.cancel(l),a.setSideNav(null)}function i(){s.close()}function d(){return!o("gt-md")}var s,l,c=this;c.close=i,c.isMobileView=d,l=e(function(){s=n("side-nav"),a.setSideNav(s)}),t.$on("$destroy",r)}angular.module("gcloudConsole").directive("sidenav",t),e.$inject=["$scope","$timeout","$mdSidenav","$mdMedia","Navbar"]}(),function(){"use strict";function t(){return{restrict:"E",replace:!0,templateUrl:"app/components/sidenav/sidenav-link.html",require:"^sidenav",link:e,transclude:!0}}function e(t,e,n,o){e.on("click",function(t){e.hasClass("sidenav-link-active")&&t.preventDefault(),o.close()})}angular.module("gcloudConsole").directive("sidenavLink",t)}(),function(){"use strict";function t(t,e,n,o){function a(t,e){return angular.extend({},t,{headers:{Authorization:"Bearer "+e.access_token},url:d+t.url,method:t.method||"GET",cache:s})}function r(e){return n.setScope(o),n.getToken().then(function(n){var o=a(e,n);return t(o)})}function i(){return r({url:"/projects"}).then(function(t){return t.data.projects})}var d="https://cloudresourcemanager.googleapis.com/v1beta1",s=e("resource");return{getProjectList:i}}angular.module("gcloudConsole").factory("resource",t),t.$inject=["$http","$cacheFactory","GAuth","CLOUD_SCOPE"]}(),function(){"use strict";function t(){function t(){return a}function e(t){a=t}function n(){a&&a.open()}function o(){a&&a.close()}var a;return{getSideNav:t,setSideNav:e,openSideNav:n,closeSideNav:o}}angular.module("gcloudConsole").factory("Navbar",t)}(),function(){"use strict";function t(){return{restrict:"E",replace:!0,scope:{projects:"=",user:"="},templateUrl:"app/components/navbar/navbar.html",controller:e,controllerAs:"navbar",bindToController:!0}}function e(t,e,n,o){function a(){return t.params.projectId}function r(t){l.selectedProject=c[t]||s}function i(){return o.logout().then(function(){t.go("login")})}function d(){return!!n.getSideNav()}var s={name:"Select a project"},l=this,c=l.projects;l.selectedProject=s,l.logout=i,l.openSideNav=n.openSideNav,l.hasSideNav=d,e.$watch(a,r)}angular.module("gcloudConsole").directive("navbar",t),e.$inject=["$state","$scope","Navbar","GAuth"]}(),function(){"use strict";function t(t,e){return{restrict:"A",require:"ngModel",scope:{getRef:"="},link:function(n,o,a,r){r.$asyncValidators.ifAvailable=function(o){return e.exists(n.getRef(o)).then(function(e){return e?t.reject():t.resolve()})}}}}angular.module("gcloudConsole").directive("ifAvailable",t),t.$inject=["$q","firebaseDriver"]}(),function(){"use strict";function t(t,e,n,o,a,r,i){function d(){var e=j.$getAuth();return e?(t.USER_ID=v=e.uid,!0):void 0}function s(){return d()?i.resolve():e.getToken().then(function(t){var e=t.access_token;return j.$authWithOAuthToken("google",e).then(function(t){return d(),t})})}function l(t){return t.$loaded().then(function(t){return i.resolve(null!==t.$value)})}function c(t){var e=$.child(t.join("/"));return a(e)}function u(){var t=$.child("dashboards").orderByPriority().startAt(1);return a(t)}function m(){return c(["dashboards"])}function g(t){return c(["dashboards",t])}function p(t){return t?c(["projects",t,"dashboards"]):m()}function h(t){var e=t.projectId,n=t.dashboardId;return e?c(["projects",e,"dashboards",n]):g(n)}function f(t){var e=t.projectId,n=t.dashboardId,o=t.pluginId;return c(["projects",e,"dashboards",n,"plugins",o])}function b(t,e){return angular.extend(t,r.toJSON(e),{creator:v}),t.$save()}var v,$=new Firebase("https://phoenix-storage.firebaseio.com"),j=n($);return{isAuthenticated:d,auth:s,exists:l,getPopularDashboards:u,getGlobalDashboards:m,getGlobalDashboard:g,getDashboards:p,getDashboard:h,getPlugin:f,save:b}}angular.module("gcloudConsole").factory("firebaseDriver",t),t.$inject=["$rootScope","GAuth","$firebaseAuth","$firebaseArray","$firebaseObject","$firebaseUtils","$q"]}(),function(){"use strict";function t(t,e,n){function o(t){return this instanceof o?(t=t||[],void(this.projects=t.reduce(function(t,e){return t[e.projectId]=e,t},{}))):new o(t)}return o.prototype.getProject=function(t){return new e(this.projects[t])},o.prototype.getDashboard=function(t){return new n(null,t)},o}angular.module("gcloudConsole").factory("$Projects",t),t.$inject=["$q","$Project","$Dashboard"]}(),function(){"use strict";function t(t){t.state("projects",{url:"/projects",templateUrl:"app/projects/projects.html",controller:"ProjectsCtrl",controllerAs:"projects",resolve:{$projects:e}})}function e(t,e){return e.getProjectList().then(function(e){return new t(e)})}angular.module("gcloudConsole").config(t),t.$inject=["$stateProvider"],e.$inject=["$Projects","resource"]}(),function(){"use strict";function t(t,e,n,o,a){function r(n){var o=e.getProject(n).dashboards.$data,r={others:{},othersCount:0,self:{},selfCount:0};return o.$watch(function(){var e=a.toJSON(o);r.others={},r.othersCount=0,r.self={},r.selfCount=0;for(var n in e){var i=e[n];i.creator===t.USER_ID?(r.self[n]=i,r.selfCount++):(r.others[n]=i,r.othersCount++)}}),r}function i(t){function a(t,a,i,d,s){function l(){return r.createDashboard(h["import"].name,h["import"].plugins).then(m,function(){var t=o.simple().content("Unable to import Dashboard").action("Ok");return o.show(t)})}function c(){return r.createDashboard(h.name,h.plugins).then(m,function(){var t=o.simple().content("Unable to create Dashboard").action("Ok");return o.show(t)})}function u(t){return r.getDashboard(getSlug(t)).$dataRef}function m(){n.hide()}function g(t,e){h.inheritFrom===t?(h.inheritFrom=null,h.plugins=[]):(h.inheritFrom=t,h.plugins=e.plugins)}var p,h=this;h.name="My Custom Dashboard",h.create=c,h.importDash=l,h.getRef=u,h.close=m,h.popularDashboards=s.getPopularDashboards(),h.selectDashboard=g,a.$watch("dialog.code",function(t){t&&(i.cancel(p),p=i(function(){e.getDashboard(t).read().then(function(t){return t.name?(h["import"]=t,void(a.importDashboard.code.$error.exists=!1)):d.reject("Dashboard not found")}).then(null,function(){h["import"]=null,a.importDashboard.code.$error.exists=!0})},1e3))})}var r=e.getProject(t);n.show({parent:angular.element(document.body),templateUrl:"app/projects/add-dashboard-dialog.html",controller:a,controllerAs:"dialog",bindToController:!0}),a.$inject=["$state","$scope","$timeout","$q","firebaseDriver"]}function d(t,n){var a=e.getProject(t),r=a.getDashboard(n);return r.remove().then(function(){return o.simple().content("Dashboard deleted")},function(){return o.simple().content("Unable to delete Dashboard")}).then(function(t){return o.show(t.action("ok"))})}function s(t,o){var a=e.getProject(t),r=a.getDashboard(o),i=o+"-"+Date.now();return r.read().then(function(t){var n=e.getDashboard(i);return n.save(t)}).then(function(){return n.show({templateUrl:"app/projects/code-dialog.html",controller:function(){this.close=angular.bind(n,n.hide)},controllerAs:"dialog",locals:{code:i},bindToController:!0})})}var l=this;l.map=e.projects;for(var c in l.map)l.map[c].dashboards=r(c);l.createDashboard=i,l.deleteDashboard=d,l.shareDashboard=s}angular.module("gcloudConsole").controller("ProjectsCtrl",t),t.$inject=["$rootScope","$projects","$mdDialog","$mdToast","$firebaseUtils"]}(),function(){"use strict";function t(t){t.state("plugins",{parent:"dashboard",controller:"PluginsCtrl",controllerAs:"plugins",url:"/plugins",templateUrl:"app/plugins/plugins.html",resolve:{pluginList:e}})}function e(t,e){return t.get("plugins.json",{cache:e}).then(function(t){return t.data})}angular.module("gcloudConsole").config(t),t.$inject=["$stateProvider"],e.$inject=["$http","projectCache"]}(),function(){"use strict";function t(t){var e=this;e.list=t}angular.module("gcloudConsole").controller("PluginsCtrl",t),t.$inject=["pluginList"]}(),function(){"use strict";function t(t,e,n){function o(t){return this instanceof o?(angular.extend(this,t),this.id=t.projectId,void(this.dashboards={$data:n.getDashboards(this.id)})):new o(t)}return o.prototype.createDashboard=function(t,n){var o=getSlug(t),a=this.getDashboard(o);return a.exists().then(function(o){if(o)return e.reject(new Error("Dashboard already exists"));var r={name:t};return n&&(r.plugins=n),a.save(r)}).then(function(){return a})},o.prototype.getDashboard=function(e){return new t(this.id,e)},o}angular.module("gcloudConsole").factory("$Project",t),t.$inject=["$Dashboard","$q","firebaseDriver"]}(),function(){"use strict";function t(t){t.state("project",{parent:"projects",controller:"ProjectCtrl",controllerAs:"project",url:"/:projectId",template:'<div flex layout="row" layout-margin ui-view />',resolve:{$project:e}})}function e(t,e){return t.getProject(e.projectId)}angular.module("gcloudConsole").config(t),t.$inject=["$stateProvider"],e.$inject=["$projects","$stateParams"]}(),function(){"use strict";function t(t,e){t.$project=e}angular.module("gcloudConsole").controller("ProjectCtrl",t),t.$inject=["$scope","$project"]}(),function(){"use strict";function t(t){return t("projectCache")}angular.module("gcloudConsole").factory("projectCache",t),t.$inject=["$cacheFactory"]}(),function(){"use strict";function t(t,e,n,o,a){function r(t,e,n){return this instanceof r?(this.projectId=t,this.dashboardId=e,this.id=n,void(this.$dataRef=a.getPlugin({projectId:t,dashboardId:e,pluginId:n}))):new r(t,e,n)}var i=e("https://raw.githubusercontent.com/{{repository}}/{{version}}/package.json"),d=e("github:{{repository}}@{{version}}/{{file}}");return r.prototype.read=function(){return this.$dataRef.$loaded()},r.prototype["delete"]=function(){return this.$dataRef.$remove()},r.prototype.save=function(t){return a.save(this.$dataRef,t)},r.prototype.load=function(){var e;return this.read().then(function(t){return e=t,null===e.$value?o.reject(new Error("Plugin does not exist")):t}).then(i).then(t.get).then(function(t){var n=t.data.files.map(function(t){var n,o=angular.extend({file:t},e);return o.version=o.version.replace(/^v/,""),n=d(o),System["import"](n)});return o.all(n)}).then(function(t){return t=t.filter(function(t){return t&&t.name}).map(function(t){return n.inject(t)}),o.all(t)})},r}angular.module("gcloudConsole").factory("$Plugin",t),t.$inject=["$http","$interpolate","$ocLazyLoad","$q","firebaseDriver"]}(),function(){"use strict";function t(t){t.state("plugin",{parent:"dashboard",url:"/plugin/:pluginId",template:'<div ui-view flex layout="column"></div>',controller:"PluginCtrl",controllerAs:"plugin",resolve:{$plugin:e}})}function e(t,e,n){var o=n.pluginId,a=t.getPlugin(o);return a.load().then(function(){return a.read()},function(){e.go("dashboard",a)})}angular.module("gcloudConsole").config(t),t.$inject=["$stateProvider"],e.$inject=["$dashboard","$state","$stateParams"]}(),function(){"use strict";function t(t,e,n){t.$plugin=e,n.go(e.state)}angular.module("gcloudConsole").controller("PluginCtrl",t),t.$inject=["$scope","$plugin","$state"]}(),function(){"use strict";function t(t){t.state("login",{controller:"LoginCtrl",controllerAs:"mv",url:"/login",templateUrl:"app/login/login.html"})}angular.module("gcloudConsole").config(t),t.$inject=["$stateProvider"]}(),function(){"use strict";function t(t,e){function n(){return e.login().then(function(){t.go("projects")})}var o=this;o.login=n}angular.module("gcloudConsole").controller("LoginCtrl",t),t.$inject=["$state","GAuth"]}(),function(){"use strict";function t(t,e,n,o,a,r,i){function d(t,e){return this instanceof d?(this.projectId=t,this.id=e,void(this.$dataRef=i.getDashboard({projectId:t,dashboardId:e}))):new d(t,e)}return d.prototype.remove=function(){return this.$dataRef.$remove()},d.prototype.read=function(){return this.$dataRef.$loaded()},d.prototype.save=function(t){return i.save(this.$dataRef,t)},d.prototype.getPlugin=function(t){return new a(this.projectId,this.id,t)},d.prototype.exists=function(){return i.exists(this.$dataRef)},d}angular.module("gcloudConsole").factory("$Dashboard",t),t.$inject=["$http","$q","$interpolate","$ocLazyLoad","$Plugin","System","firebaseDriver"]}(),function(){"use strict";function t(t){t.state("dashboard",{parent:"project",controller:"DashboardCtrl",controllerAs:"dashboard",url:"/:dashboardId",templateUrl:"app/dashboard/dashboard.html",resolve:{$dashboard:e}})}function e(t,e){var n=e.dashboardId;return"default"===n&&(n=t.id+"-dashboard"),t.getDashboard(n)}angular.module("gcloudConsole").config(t),t.$inject=["$stateProvider"],e.$inject=["$project","$stateParams"]}(),function(){"use strict";function t(t,e,n,o,a,r){function i(e,n,a){function i(){var e=angular.copy(n);return a?t.resolve(e):d(e)}function s(t){function n(){return a?i(s.plugin):d(s.plugin).then(function(t){return e=getSlug(t.title),i(t)})}function i(t){var n=o.getPlugin(e);return n.save(t).then(s.close)}var s=this;s.plugin=t,s.close=r.hide,s.save=n}return s.$inject=["pluginConfig"],r.show({controller:s,controllerAs:"vm",bindToController:!0,templateUrl:"app/dashboard/plugin-config.html",resolve:{pluginConfig:i}})}function d(t){var e=t.title;return o.read().then(function(n){function o(t){if(n&&n.plugins)for(var e in n.plugins)if(n.plugins[e].title===t||n.plugins[getSlug(t)])return!0;return!1}if(!o(t.title))return t;for(var a=0;++a;)if(t.title=e+" ("+a+")",!o(t.title))return t})}function s(t,e){return i(t,e,!1)}function l(e,a){var r=o.getPlugin(e),i=n.params.pluginId===e;return r["delete"]().then(function(){return i?n.go("dashboard",{dashboardId:o.id}):t.resolve()}).then(c).then(function(t){return"ok"===t?r.save(a).then(function(){return i?n.go("plugin",{pluginId:e}):void 0}):void 0})}function c(){var t=a.simple();return t.content("Plugin removed"),t.action("undo"),a.show(t)}var u=this;e.$dashboard=o,u.configure=i,u.clone=s,u.remove=l}angular.module("gcloudConsole").controller("DashboardCtrl",t),t.$inject=["$q","$scope","$state","$dashboard","$mdToast","$mdDialog"]}(),function(){"use strict";function t(t,e,n,o,a,r,i,d,s){r.setClient(d),r.setScope(s),e.$on("$stateChangeError",function(){console.log(arguments)}),e.$on("$locationChangeSuccess",function(t){i.isLogin()&&a.isAuthenticated()||(t.preventDefault(),r.checkAuth().then(a.auth).then(function(){n.sync()},function(){o.get("$state").go("login")}))}),n.listen()}angular.module("gcloudConsole").run(t),t.$inject=["$q","$rootScope","$urlRouter","$injector","firebaseDriver","GAuth","GData","CLIENT_ID","CLOUD_SCOPE"]}(),function(){"use strict";function t(t){t.deferIntercept(),t.otherwise(function(t){var e=t.get("GData");return e.isLogin()?"/projects":"/login"})}function e(t){t.$on("$stateChangeSuccess",function(e,n){t.ACTIVE_STATE=n})}angular.module("gcloudConsole").config(t).run(e),t.$inject=["$urlRouterProvider"],e.$inject=["$rootScope"]}(),function(){"use strict";angular.module("gcloudConsole").constant("CLIENT_ID","288560394597-82lbmhf7077sl5bfp1ll4nnjbhi27etn.apps.googleusercontent.com").constant("CLOUD_SCOPE","https://www.googleapis.com/auth/cloud-platform")}(),function(){"use strict";function t(t){var e=t.extendPalette("grey",{0:"#9e9e9e",500:"#fafafa"});t.definePalette("consolePalette",e),t.theme("default").primaryPalette("consolePalette").accentPalette("blue")}angular.module("gcloudConsole").config(t),t.$inject=["$mdThemingProvider"]}(),angular.module("gcloudConsole").run(["$templateCache",function(t){t.put("app/dashboard/dashboard.html",'<sidenav class="dashboard-nav"><md-list><md-list-item class="dashboard-nav-item"><div class="md-list-item-inner">{{$dashboard.$dataRef.name}}</div></md-list-item><md-divider></md-divider><md-list-item ng-repeat="(pluginId, plugin) in $dashboard.$dataRef.plugins | orderBy:\'title\' track by plugin.title" class="dashboard-nav-item md-with-secondary"><sidenav-link ui-sref="plugin({ pluginId: pluginId })"><md-icon>extension</md-icon>{{plugin.title}}</sidenav-link><md-menu class="plugin-menu"><md-button class="md-icon-button md-secondary-container" ng-click="$mdOpenMenu($event)"><md-icon>more_vert</md-icon></md-button><md-menu-content width="3"><md-menu-item ng-click="dashboard.configure(pluginId, plugin, true)"><md-button><md-icon>settings</md-icon>Settings</md-button></md-menu-item><md-menu-item><md-button ng-click="dashboard.clone(pluginId, plugin)"><md-icon>content_copy</md-icon>Clone</md-button></md-menu-item><md-divider></md-divider><md-menu-item><md-button ng-click="dashboard.remove(pluginId, plugin)"><md-icon>delete</md-icon>Delete</md-button></md-menu-item></md-menu-content></md-menu></md-list-item><md-list-item class="dashboard-nav-item"><sidenav-link ui-sref="plugins"><md-icon>add</md-icon>Add plugins</sidenav-link></md-list-item></md-list></sidenav><div layout="column" flex="" ui-view=""></div>'),t.put("app/dashboard/plugin-config.html",'<md-dialog><md-dialog-content class="md-padding"><form name="pluginForm"><div class="md-layout-row"><md-input-container class="md-block"><label>Name</label> <input type="text" ng-model="vm.plugin.title"></md-input-container></div></form></md-dialog-content><div class="md-actions"><md-button ng-click="vm.save()">Save</md-button><md-button ng-click="vm.close()">Cancel</md-button></div></md-dialog>'),t.put("app/login/login.html",'<div flex="" layout="column" layout-align="center center" layout-margin="" class="layout"><div class="login-logo"><img src="assets/images/logo-vertical.svg" alt="Google Developers Console"></div><md-button class="md-raised md-accent" ng-click="mv.login()">Login</md-button></div>'),t.put("app/plugins/plugins.html",'<md-content flex="" class="md-whiteframe-z1 plugin-explorer"><md-data-table-toolbar ng-if="!plugins.filtering"><h2 class="md-title">Plugins</h2><span flex=""></span><md-button class="md-icon-button" ng-click="plugins.filtering = true"><md-tooltip>Filter</md-tooltip><md-icon>filter_list</md-icon></md-button></md-data-table-toolbar><md-data-table-toolbar ng-if="plugins.filtering"><md-icon>search</md-icon><input flex="" type="text" placeholder="Search {{plugins.list.length}} plugins.." ng-model="plugins.filter" class="plugin-explorer-filter"><md-button class="md-icon-button" ng-click="plugins.filtering = false"><md-tooltip>Cancel</md-tooltip><md-icon>close</md-icon></md-button></md-data-table-toolbar><md-data-table-container><table md-data-table=""><thead><tr><th name="Name"></th><th name=""></th></tr></thead><tbody><tr ng-repeat="plugin in plugins.list | filter: plugins.filter"><td>{{plugin.title}}</td><td><md-button class="md-icon-button" ng-click="dashboard.configure(plugin.slug, plugin, false)"><md-tooltip>Add plugin</md-tooltip><md-icon>add</md-icon></md-button></td></tr></tbody></table></md-data-table-container></md-content>'),t.put("app/projects/add-dashboard-dialog.html",'<md-dialog area-label="Add Dashboard" flex="30" class="dashboard-add-dialog"><md-dialog-content><md-tabs md-dynamic-height="" md-border-bottom=""><md-tab label="Create" md-on-select="dialog.add = dialog.create"><md-content><form name="createDashboard"><div class="md-padding"><h3 class="md-title">Popular Dashboards</h3><md-card class="dashboard-card dashboard-card--global" ng-repeat="(dashboardId, dashboardData) in dialog.popularDashboards" ng-click="dialog.selectDashboard(dashboardId, dashboardData)" ng-class="{ \'dashboard-card--selected\': dialog.inheritFrom === dashboardId }"><md-card-content><h3 class="md-subhead">{{dashboardData.name}}</h3></md-card-content></md-card></div><div class="md-padding"><md-input-container class="md-block"><label>Name</label> <input type="text" ng-model="dialog.name" name="name" required="" if-available="" get-ref="dialog.getRef"><div ng-messages="createDashboard.name.$error"><div ng-if="createDashboard.name.$error.ifAvailable" ng-message="">This name is already taken.</div></div></md-input-container></div></form></md-content></md-tab><md-tab label="Import" md-on-select="dialog.add = dialog.importDash"><md-content class="md-padding"><form name="importDashboard"><md-input-container class="md-block"><label>Code</label> <input type="text" ng-model="dialog.code" name="code" required=""><div ng-messages="importDashboard.code.$error"><div ng-if="importDashboard.code.$error.exists" ng-message="">The provided code is invalid.</div></div></md-input-container><div ng-if="dialog.import"><md-input-container class="md-block"><label>Name</label> <input type="text" ng-model="dialog.import.name" name="name" required="" if-available="" get-ref="dialog.getRef"><div ng-messages="importDashboard.name.$error"><div ng-if="importDashboard.name.$error.ifAvailable" ng-message="">This name is already taken.</div></div></md-input-container></div><div ng-if="dialog.import.plugins"><label>Plugins</label><ul><li ng-repeat="plugin in dialog.import.plugins">{{plugin.title}}</li></ul></div></form></md-content></md-tab></md-tabs></md-dialog-content><div class="md-actions"><md-button ng-click="dialog.close()">Cancel</md-button><md-button class="md-raised md-accent" ng-click="dialog.add()">Add</md-button></div></md-dialog>'),t.put("app/projects/code-dialog.html",'<md-dialog flex="30"><md-dialog-content class="md-padding"><h2>Share this code</h2><md-input-container class="md-block"><label>Code</label> <input type="text" ng-model="dialog.code" text-selected="" readonly=""></md-input-container></md-dialog-content><div class="md-actions"><md-button ng-click="dialog.close()">Close</md-button></div></md-dialog>'),t.put("app/projects/projects.html",'<section layout="column" flex=""><navbar projects="projects.map" user="gapi.user"></navbar><div ng-if="ACTIVE_STATE.name === \'projects\'"><md-tabs class="dashboard-tabs" md-dynamic-height=""><md-tab class="dashboard-tab" ng-repeat="(projectId, projectData) in projects.map" label="{{projectData.name}}" md-on-deselect="projects.dashboardListId = null" md-on-select="projects.dashboardListId = projectId"><h1 class="md-title layout-padding" ng-if="projectData.dashboards.othersCount > 0">Project Dashboards</h1><div layout="row" layout-sm="column"><md-card class="dashboard-card dashboard-card--not-self" ng-repeat="(dashboardId, dashboardData) in projectData.dashboards.others"><md-card-content ui-sref="dashboard({ projectId: projectId, dashboardId: dashboardId })"><h3 class="md-title">{{dashboardData.name || \'Default Dashboard\'}}</h3></md-card-content><md-divider></md-divider><div class="md-actions" layout="row" layout-align="end center"><md-button class="md-icon-button"><md-tooltip>Edit Dashboard</md-tooltip><md-icon>edit</md-icon></md-button><md-button class="md-icon-button" ng-click="projects.shareDashboard(projectId, dashboardId)"><md-tooltip>Share Dashboard</md-tooltip><md-icon>share</md-icon></md-button><md-button class="md-icon-button" ng-click="projects.deleteDashboard(projectId, dashboardId)"><md-tooltip>Delete Dashboard</md-tooltip><md-icon>delete</md-icon></md-button></div></md-card></div><h1 class="md-title layout-padding" ng-if="projectData.dashboards.selfCount > 0 && projectData.dashboards.othersCount > 0">My Dashboards</h1><div layout="row" layout-sm="column"><md-card class="dashboard-card" ng-repeat="(dashboardId, dashboardData) in projectData.dashboards.self"><md-card-content ui-sref="dashboard({ projectId: projectId, dashboardId: dashboardId })"><h3 class="md-title">{{dashboardData.name || \'Default Dashboard\'}}</h3></md-card-content><md-divider></md-divider><div class="md-actions" layout="row" layout-align="end center"><md-button class="md-icon-button"><md-tooltip>Edit Dashboard</md-tooltip><md-icon>edit</md-icon></md-button><md-button class="md-icon-button" ng-click="projects.shareDashboard(projectId, dashboardId)"><md-tooltip>Share Dashboard</md-tooltip><md-icon>share</md-icon></md-button><md-button class="md-icon-button" ng-click="projects.deleteDashboard(projectId, dashboardId)"><md-tooltip>Delete Dashboard</md-tooltip><md-icon>delete</md-icon></md-button></div></md-card></div></md-tab></md-tabs><md-button class="md-fab dashboard-add" ng-if="projects.dashboardListId" ng-click="projects.createDashboard(projects.dashboardListId)"><md-tooltip>Create a new Dashboard</md-tooltip><md-icon>add</md-icon></md-button></div><div ui-view="" layout="column" flex=""></div></section>'),t.put("app/components/navbar/navbar.html",'<md-toolbar layout="row" layout-align="start center" class="md-whiteframe-z1 navbar"><md-button class="md-icon-button navbar-sidemenu-button" ng-if="navbar.hasSideNav()" ng-click="navbar.openSideNav()"><md-icon>menu</md-icon></md-button><a ui-sref="projects" title="Developer Console Projects"><img class="navbar-logo" src="assets/images/logo-color.svg" alt="gcloud"></a><span flex=""></span><md-button class="md-icon-button"><md-tooltip>Settings</md-tooltip><md-icon>settings</md-icon></md-button><md-menu layout="column"><md-button class="md-icon-button" ng-click="$mdOpenMenu($event)" aria-label="Open user actions menu"><img class="navbar-user-icon" ng-src="{{navbar.user.picture}}"></md-button><md-menu-content><md-menu-item><md-button ng-click="navbar.logout()">Sign out</md-button></md-menu-item></md-menu-content></md-menu></md-toolbar>'),t.put("app/components/sidenav/sidenav-link.html",'<a class="md-list-item-inner" ui-sref-active="sidenav-link-active" flex="" ng-transclude=""></a>'),t.put("app/components/sidenav/sidenav.html",'<md-sidenav md-is-locked-open="!sidenav.isMobileView()" class="md-sidenav-left md-whiteframe-z1" ng-class="{ flex: !sidenav.isMobileView() }" md-component-id="side-nav" ng-transclude=""></md-sidenav>')}]);