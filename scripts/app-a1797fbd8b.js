!function(){"use strict";angular.module("gcloudConsole",["ngAnimate","ngSanitize","ui.router","ngMaterial","md.data.table","angular-google-gapi","oc.lazyLoad"])}(),function(){"use strict";function t(){return System.config({paths:{"github:*":"https://github.jspm.io/*","npm:*":"https://npm.jspm.io/*"}}),System}angular.module("gcloudConsole").factory("System",t)}(),function(){"use strict";function t(t,n,e){var o=t.fetch,i=/\.html/,r=/^.*[\\\/]/;return t.fetch=function(t){return i.test(t.address)?n.get(t.address).then(function(n){var o=t.address.replace(r,"");return e.put(o,n.data),""}):o.apply(this,arguments)},t}angular.module("gcloudConsole").decorator("System",t),t.$inject=["$delegate","$http","$templateCache"]}(),function(){"use strict";function t(t,n){var e=t.fetch,o=/\.css/;return t.fetch=function(t){if(!o.test(t.address))return e.apply(this,arguments);var i=n.defer(),r=document.createElement("link");return r.rel="stylesheet",r.onload=function(){i.resolve("")},r.onerror=function(t){i.reject(t)},document.head.appendChild(r),r.href=t.address,i.promise},t}angular.module("gcloudConsole").decorator("System",t),t.$inject=["$delegate","$q"]}(),function(){"use strict";function t(t,n,e,o){function i(t,n){return angular.extend({},t,{headers:{Authorization:"Bearer "+n.access_token},url:c+t.url,method:t.method||"GET",cache:l})}function r(n){return e.setScope(o),e.getToken().then(function(e){var o=i(n,e);return t(o)})}function a(){return r({url:"/projects"}).then(function(t){return t.data.projects})}var c="https://cloudresourcemanager.googleapis.com/v1beta1",l=n("resource");return{getProjectList:a}}angular.module("gcloudConsole").factory("resource",t),t.$inject=["$http","$cacheFactory","GAuth","CLOUD_SCOPE"]}(),function(){"use strict";function t(){return{restrict:"E",replace:!0,templateUrl:"app/components/sidenav/sidenav.html",transclude:!0,controller:n,controllerAs:"sidenav"}}function n(t,n,e,o,i){function r(){n.cancel(u),i.setSideNav(null)}function a(){l.close()}function c(){return!o("gt-md")}var l,u,s=this;s.close=a,s.isMobileView=c,u=n(function(){l=e("side-nav"),i.setSideNav(l)}),t.$on("$destroy",r)}angular.module("gcloudConsole").directive("sidenav",t),n.$inject=["$scope","$timeout","$mdSidenav","$mdMedia","Navbar"]}(),function(){"use strict";function t(){return{restrict:"E",replace:!0,templateUrl:"app/components/sidenav/sidenav-link.html",require:"^sidenav",link:n,transclude:!0}}function n(t,n,e,o){n.on("click",function(){o.close()})}angular.module("gcloudConsole").directive("sidenavLink",t)}(),function(){"use strict";function t(){function t(){return i}function n(t){i=t}function e(){i&&i.open()}function o(){i&&i.close()}var i;return{getSideNav:t,setSideNav:n,openSideNav:e,closeSideNav:o}}angular.module("gcloudConsole").factory("Navbar",t)}(),function(){"use strict";function t(){return{restrict:"E",replace:!0,scope:{projects:"=",user:"="},templateUrl:"app/components/navbar/navbar.html",controller:n,controllerAs:"navbar",bindToController:!0}}function n(t,n,e,o){function i(){return t.params.projectId}function r(t){s.selectedProject=a(t)||u}function a(t){for(var n=0;n<d.length;n++)if(d[n].projectId===t)return d[n].name}function c(){return o.logout().then(function(){t.go("login")})}function l(){return!!e.getSideNav()}var u="Select a project",s=this,d=s.projects;s.selectedProject=u,s.logout=c,s.openSideNav=e.openSideNav,s.hasSideNav=l,n.$watch(i,r)}angular.module("gcloudConsole").directive("navbar",t),n.$inject=["$state","$scope","Navbar","GAuth"]}(),function(){"use strict";function t(t){t.state("projects",{url:"/projects",templateUrl:"app/projects/projects.html",controller:"ProjectsCtrl",controllerAs:"projects",resolve:{projectList:n}})}function n(t,n,e){return t.getProjectList().then(function(t){return e.all(t.map(n.load))})}angular.module("gcloudConsole").config(t),t.$inject=["$stateProvider"],n.$inject=["resource","projectservice","$q"]}(),function(){"use strict";function t(t,n){function e(t){function e(e){function o(){return t.createConfiguration(r.name).then(function(n){return e.go("configuration",{projectId:t.id,configurationSlug:n.slug}).then(i)})}function i(){n.hide()}var r=this;r.name="My Custom Dashboard",r.create=o,r.close=i}n.show({parent:angular.element(document.body),templateUrl:"app/projects/create-configuration-dialog.html",controller:e,controllerAs:"dialog",bindToController:!0}),e.$inject=["$state"]}var o=this;o.list=t,o.createConfiguration=e}angular.module("gcloudConsole").controller("ProjectsCtrl",t),t.$inject=["projectList","$mdDialog"]}(),function(){"use strict";function t(t,n,e,o,i,r,a){function c(t){this.name=t.name,this.id=t.projectId,this.configurations={},this.configurationObjects={}}function l(t,n){this.project=t,this.metadata=n,this.name=n.name,this.slug=n.slug,n.plugins=n.plugins||[],this.plugins=n.plugins}function u(t){angular.isString(t)&&(t={projectId:t});var n=new c(t);return n.load().then(function(){return n})}var s=n("https://raw.githubusercontent.com/{{repository}}/{{version}}/package.json"),d=n("github:{{repository}}@{{version}}/{{file}}");return c.prototype.load=function(){var t=this;return this.storage=a({projectId:this.id,driver:"localStorage"}),this.storage.getItem("configurations").then(function(n){t.configurations=n||{}})},c.prototype.createConfiguration=function(n,e){var o=e||slug(n,{lower:!0}),i={name:n,slug:o,plugins:[]};this.configurations[o]=i;var r=this.configuration(o);return this.saveConfiguration(o,i).then(function(){return t.resolve(r)})},c.prototype.configuration=function(t){if(this.configurationObjects[t])return this.configurationObjects[t];var n=this.configurations[t];if(!n)throw new Error("Cannot find configuration: "+t);var e=new l(this,n);return this.configurationObjects[t]=e,e},c.prototype.saveConfiguration=function(t,n){return n?this.configurations[t]=n:delete this.configurations[t],this.storage.setItem("configurations",this.configurations)},l.prototype.addPlugin=function(t){return this.plugins.push(t),this.project.saveConfiguration(this.slug,this.metadata)},l.prototype.removePlugin=function(t){var n=this.plugins.indexOf(t);return this.plugins.splice(n,1),this.project.saveConfiguration(this.slug,this.metadata)},l.prototype.remove=function(){return this.project.saveConfiguration(this.slug)},l.prototype.getPlugin=function(t){for(var n,e=this.plugins.length,o=0;e>o;o++)if(n=this.plugins[o],n.id===t)return n;return null},l.prototype.loadPlugin=function(n){var a,c=this.getPlugin(n);return c?(a=s(c),e.get(a,{cache:r}).then(function(n){var e=n.data.files.map(function(t){var n=d(angular.extend({file:t},c));return o["import"](n)});return t.all(e)}).then(function(n){return n=n.filter(function(t){return t&&t.name}).map(function(t){return i.inject(t)}),t.all(n)})):t.reject('Unknown plugin "'+n+'"')},{load:u}}angular.module("gcloudConsole").factory("projectservice",t),t.$inject=["$q","$interpolate","$http","System","$ocLazyLoad","projectCache","projectStorage"]}(),function(){"use strict";function t(t){t.state("project",{parent:"projects",controller:"ProjectCtrl",controllerAs:"project",url:"/:projectId",templateUrl:"app/project/project.html",resolve:{$project:n}})}function n(t,n){return n.load(t.projectId)}angular.module("gcloudConsole").config(t),t.$inject=["$stateProvider"],n.$inject=["$stateParams","projectservice"]}(),function(){"use strict";function t(){}angular.module("gcloudConsole").controller("ProjectCtrl",t)}(),function(){"use strict";function t(t,n){function e(n){return this instanceof e?(this.driver=t.get(n.driver+"Driver")(n.projectId),void(this.cache=null)):new e(n)}return e.prototype.setItem=function(t,n){var e=this.driver;return this._getCache().then(function(o){return o[t]=n,e.write(o)})},e.prototype.getItem=function(t){return this._getCache().then(function(n){return n[t]})},e.prototype._getCache=function(){if(this.cache)return n.resolve(this.cache);var t=this;return this.driver.read().then(function(n){return t.cache=n})},e}function n(t){function n(t){return this instanceof n?void(this.projectId=t):new n(t)}return n.prototype.write=function(n){return localStorage.setItem(this.projectId,JSON.stringify(n)),t.resolve()},n.prototype.read=function(){var n=JSON.parse(localStorage.getItem(this.projectId)||"{}");return t.resolve(n)},n}angular.module("gcloudConsole").factory("localStorageDriver",n).factory("projectStorage",t),t.$inject=["$injector","$q"],n.$inject=["$q"]}(),function(){"use strict";function t(t){return t("projectCache")}angular.module("gcloudConsole").factory("projectCache",t),t.$inject=["$cacheFactory"]}(),function(){"use strict";function t(t){t.state("plugins",{parent:"configuration",controller:"PluginsCtrl",controllerAs:"plugins",url:"/plugins",templateUrl:"app/plugins/plugins.html",resolve:{pluginList:n}})}function n(t,n,e){return t.get("plugins.json",{cache:e}).then(function(t){var e=t.data;return e.forEach(function(t){t.isEnabled=!!n.getPlugin(t.id)}),e})}angular.module("gcloudConsole").config(t),t.$inject=["$stateProvider"],n.$inject=["$http","$configuration","projectCache"]}(),function(){"use strict";function t(t,n){function e(t){return t.isEnabled?void n.addPlugin(t):void n.removePlugin(t)}var o=this;o.list=t,o.toggle=e}angular.module("gcloudConsole").controller("PluginsCtrl",t),t.$inject=["pluginList","$configuration"]}(),function(){"use strict";function t(t){t.state("login",{controller:"LoginCtrl",controllerAs:"mv",url:"/login",templateUrl:"app/login/login.html"})}angular.module("gcloudConsole").config(t),t.$inject=["$stateProvider"]}(),function(){"use strict";function t(t,n){function e(){return n.login().then(function(){t.go("projects")})}var o=this;o.login=e}angular.module("gcloudConsole").controller("LoginCtrl",t),t.$inject=["$state","GAuth"]}(),function(){"use strict";function t(t){t.state("configuration",{parent:"project",controller:"ConfigurationCtrl",controllerAs:"configuration",url:"/:configurationSlug",templateUrl:"app/configuration/configuration.html",resolve:{$configuration:n}}).state("configuration.plugin",{url:"/plugins/:pluginId",resolve:{plugin:e}})}function n(t,n,e){var o=t.configurationSlug;return e.resolve(n.configuration(o))}function e(t,n,e){var o=t.pluginId;return n.loadPlugin(o).then(function(){e.go(o)})}angular.module("gcloudConsole").config(t),t.$inject=["$stateProvider"],n.$inject=["$stateParams","$project","$q"],e.$inject=["$stateParams","$configuration","$state"]}(),function(){"use strict";function t(t){var n=this;n.plugins=t.plugins}angular.module("gcloudConsole").controller("ConfigurationCtrl",t),t.$inject=["$configuration"]}(),function(){"use strict";function t(t,n,e,o,i,r,a){o.setClient(r),o.setScope(a),t.$on("$stateChangeError",function(){console.log(arguments)}),t.$on("$locationChangeSuccess",function(t){i.isLogin()||(t.preventDefault(),o.checkAuth().then(function(){n.sync()},function(){e.get("$state").go("login")}))}),n.listen()}angular.module("gcloudConsole").run(t),t.$inject=["$rootScope","$urlRouter","$injector","GAuth","GData","CLIENT_ID","CLOUD_SCOPE"]}(),function(){"use strict";function t(t){t.deferIntercept(),t.otherwise(function(t){var n=t.get("GData");return n.isLogin()?"/projects":"/login"})}function n(t){t.$on("$stateChangeSuccess",function(n,e){t.ACTIVE_STATE=e})}angular.module("gcloudConsole").config(t).run(n),t.$inject=["$urlRouterProvider"],n.$inject=["$rootScope"]}(),function(){"use strict";angular.module("gcloudConsole").constant("CLIENT_ID","288560394597-82lbmhf7077sl5bfp1ll4nnjbhi27etn.apps.googleusercontent.com").constant("CLOUD_SCOPE","https://www.googleapis.com/auth/cloud-platform")}(),function(){"use strict";function t(t){var n=t.extendPalette("grey",{0:"#9e9e9e",500:"#fafafa"});t.definePalette("consolePalette",n),t.theme("default").primaryPalette("consolePalette").accentPalette("blue")}angular.module("gcloudConsole").config(t),t.$inject=["$mdThemingProvider"]}(),angular.module("gcloudConsole").run(["$templateCache",function(t){t.put("app/configuration/configuration.html",'<sidenav class="project-nav"><md-list ng-if="configuration.plugins.length"><md-list-item class="project-nav-item project-nav-item-header"><div class="md-list-item-inner"><md-icon>extension</md-icon><span flex="">Plugins</span></div></md-list-item><md-list-item ng-repeat="plugin in configuration.plugins" class="project-nav-item"><sidenav-link ui-sref="configuration.plugin({ pluginId: plugin.id })">{{::plugin.title}}</sidenav-link></md-list-item></md-list><md-divider ng-if="project.plugins.length"></md-divider><md-list><md-list-item class="project-nav-item"><sidenav-link ui-sref="plugins"><md-icon>add</md-icon>Add plugins</sidenav-link></md-list-item></md-list></sidenav><div layout="column" flex="" ui-view=""></div>'),t.put("app/login/login.html",'<div flex="" layout="column" layout-align="center center" layout-margin="" class="layout"><div class="login-logo"><img src="assets/images/logo-vertical.svg" alt="Google Developers Console"></div><md-button class="md-raised md-accent" ng-click="mv.login()">Login</md-button></div>'),t.put("app/plugins/plugins.html",'<md-content flex="" class="md-whiteframe-z1 plugin-explorer"><md-data-table-toolbar ng-if="!plugins.filtering"><h2 class="md-title">Plugins</h2><span flex=""></span><md-button class="md-icon-button" ng-click="plugins.filtering = true"><md-tooltip>Filter</md-tooltip><md-icon>filter_list</md-icon></md-button></md-data-table-toolbar><md-data-table-toolbar ng-if="plugins.filtering"><md-icon>search</md-icon><input flex="" type="text" placeholder="Search {{plugins.list.length}} plugins.." ng-model="plugins.filter" class="plugin-explorer-filter"><md-button class="md-icon-button" ng-click="plugins.filtering = false"><md-tooltip>Cancel</md-tooltip><md-icon>close</md-icon></md-button></md-data-table-toolbar><md-data-table-container><table md-data-table=""><thead><tr><th name="Name"></th><th name="Enabled"></th></tr></thead><tbody><tr ng-repeat="plugin in plugins.list | filter: plugins.filter"><td>{{plugin.title}}</td><td><md-switch ng-model="plugin.isEnabled" aria-label="Enable plugin" ng-change="plugins.toggle(plugin)"></md-switch></td></tr></tbody></table></md-data-table-container></md-content>'),t.put("app/project/project.html",'<div ui-view="" layout="row" layout-margin="" flex=""></div>'),t.put("app/projects/create-configuration-dialog.html",'<md-dialog aria-label="Create configuration dialog" flex="33"><md-dialog-content><h2>Create Configuration</h2><p>Create a custom dashboard configuration.</p><md-input-container><label>Name</label> <input type="text" ng-model="dialog.name" required=""></md-input-container></md-dialog-content><div class="md-actions"><md-button ng-click="dialog.close()">Cancel</md-button><md-button class="md-raised md-accent" ng-click="dialog.create()" ng-disabled="!dialog.name">Create</md-button></div></md-dialog>'),t.put("app/projects/projects.html",'<section layout="column" flex=""><navbar projects="projects.list" user="gapi.user"></navbar><div layout-margin="" layout-padding="" ng-if="ACTIVE_STATE.name === \'projects\'"><h1 class="md-display-1">Custom Dashboards</h1><p>Your projects are listed below. Each one may have one or more configurations. Click<md-icon>add</md-icon>to create a customized dashboard.</p><md-content layout-padding="" layout-margin="" ng-repeat="project in projects.list"><div layout="row" layout-align="start start"><div layout-margin="" class="md-headline">{{project.name}}</div></div><div layout="row"><md-card class="project-configuration-card project-configuration-card--create" layout-padding=""><md-card-content ng-click="projects.createConfiguration(project)"><md-icon class="md-18">add</md-icon></md-card-content></md-card><md-card class="project-configuration-card" layout-padding="" ng-repeat="(configurationSlug, configurationData) in project.configurations" ui-sref="configuration({ projectId: project.id, configurationSlug: configurationSlug })"><md-card-content><h2 class="md-title">{{configurationData.name}}</h2></md-card-content></md-card></div></md-content></div><div ui-view="" layout="column" flex=""></div></section>'),t.put("app/components/navbar/navbar.html",'<md-toolbar layout="row" layout-align="start center" class="md-whiteframe-z1 navbar"><md-button class="md-icon-button navbar-sidemenu-button" ng-if="navbar.hasSideNav()" ng-click="navbar.openSideNav()"><md-icon>menu</md-icon></md-button><a ui-sref="projects" title="Developer Console Projects"><img class="navbar-logo" src="assets/images/logo-color.svg" alt="gcloud"></a><md-menu layout="column" class="navbar-project-selector"><md-button ng-click="$mdOpenMenu($event)">{{navbar.selectedProject}}<md-icon class="material-icons">arrow_drop_down</md-icon></md-button><md-menu-content width="3"><md-menu-item ng-repeat="project in navbar.projects"><md-button ui-sref="project({ projectId: project.id })" class="navbar-project-link">{{project.name}}</md-button></md-menu-item></md-menu-content></md-menu><span flex=""></span><md-button class="md-icon-button"><md-tooltip>Settings</md-tooltip><md-icon>settings</md-icon></md-button><md-menu layout="column"><md-button class="md-icon-button" ng-click="$mdOpenMenu($event)" aria-label="Open user actions menu"><img class="navbar-user-icon" ng-src="{{navbar.user.picture}}"></md-button><md-menu-content><md-menu-item><md-button ng-click="navbar.logout()">Sign out</md-button></md-menu-item></md-menu-content></md-menu></md-toolbar>'),t.put("app/components/sidenav/sidenav-link.html",'<a class="md-list-item-inner" flex="" ng-transclude=""></a>'),t.put("app/components/sidenav/sidenav.html",'<md-sidenav md-is-locked-open="!sidenav.isMobileView()" class="md-sidenav-left md-whiteframe-z1" ng-class="{ flex: !sidenav.isMobileView() }" md-component-id="side-nav" ng-transclude=""></md-sidenav>')}]);